#!/usr/bin/env python
# coding:utf-8

'''
WEEELAB_BOT - Telegram bot.
Author: God
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
NOTE: The print commands are only for debug.
'''

import os
import requests
import owncloud
import datetime
import operator
import ast
from sys import argv

OC_PATH = os.environ.get('OC_PATH')
OC_PWD = os.environ.get('OC_PWD')
OC_URL = os.environ.get('OC_URL')
OC_USER = os.environ.get('OC_USER')
TOKEN_BOT = os.environ.get('TOKEN_BOT')
USER_LIST_NAME = os.environ.get('USER_LIST_NAME')
USER_BOT_PATH = os.environ.get('USER_BOT_PATH')

class BotHandler:
    def __init__(self, token):
        self.token = token
        self.api_url = "https://api.telegram.org/bot{}/".format(token)

    def get_updates(self, offset=None, timeout=30):
        method = 'getUpdates'
        params = {'timeout': timeout, 'offset': offset}
        resp = requests.get(self.api_url + method, params)
        result_json = resp.json()['result']
        return result_json

    def send_message(self, chat_id, text):
        params = {'chat_id': chat_id, 'text': text}
        method = 'sendMessage'
        resp = requests.post(self.api_url + method, params)
        return resp

    def get_last_update(self):
        get_result = self.get_updates()

        if len(get_result) > 0:
            last_update = get_result[-1]
            return last_update
        else:
            return -1

def nameExtr(username):
    firstName = username.split('.')[0].capitalize()
    lastName = username.split('.')[1].capitalize()
    return firstName + " " + lastName


greet_bot = BotHandler(TOKEN_BOT)
lst_username = USER_LIST_NAME

def main():

    oc = owncloud.Client(OC_URL)
    oc.login(OC_USER, OC_PWD)
    new_offset = None

    while True:
        greet_bot.get_updates(new_offset)
        last_update = greet_bot.get_last_update()
        line = ''
        count = 0
        found_username = False
        if last_update != -1:
            try:
                user_bot_str = ''
                last_update_id = last_update['update_id']
                new_offset = last_update_id + 1
                last_chat_text = last_update['message']['text']
                command = last_chat_text.split()
                last_chat_id = last_update['message']['chat']['id']
                last_user_id = last_update['message']['from']['id']
                last_chat_name = last_update['message']['from']['first_name']
                last_user_username = last_update['message']['from']['username']
                found_username = True
                complete_name = last_chat_name 
                #last_chat_surname = last_update['message']['from']['last_name']
                #complete_name = complete_name + ' ' + last_chat_surname
                print last_update['message']
                #print USER_BOT
                
            except KeyError:
                if (found_username == False):
                    last_user_username = 'error'
                print "ERROR!"
            
            if last_user_username in lst_username:
                print "ok" 

                ''' ADD COMMANDS HERE '''
                # Show how many students are in lab right now
                if command[0] == "/inlab" or command[0] == "/inlab@weeelab_bot":
                    file = oc.get_file_contents(OC_PATH)
                    found = False
                    if (len(command) == 1):
                        for char in file:
                            if char != '\n':
                                line += char
                            elif ("INLAB" in line):
                                count += 1
                                print count
                                line = ''
                        if count == 0:
                            greet_bot.send_message(last_chat_id, 'Nobody is in lab right now.')
                        elif count == 1:
                            greet_bot.send_message(last_chat_id, 'There is one student in lab right now.')
                        else:
                            greet_bot.send_message(last_chat_id, 'There are {c} students in lab right now.'.format(c=count))
                    elif (command[1]=="who"):
                        for char in file:
                            if char != '\n':
                                line += char
                            elif ("INLAB" in line):
                                found= True
                                user = nameExtr(line[47:line.rfind(">")])
                                greet_bot.send_message(last_chat_id, '{}'.format(user))
                                line = ''
                            else:
                                line = ''
                        if (found == False):
                            greet_bot.send_message(last_chat_id, 'Nobody is in lab right now.')

                # Show log file
                if command[0] == "/log" or command[0] == "/log@weeelab_bot":
                    file = oc.get_file_contents(OC_PATH)
                    data=oc.file_info(OC_PATH).get_last_modified()
                    log = ('Last update of log file: {}\n \n'.format(data))
                    #greet_bot.send_message(last_chat_id, 'Last modified time of log file\n{}\n'.format(data))
                    n_line= 0
                    n_print=0
                    if (len(command)>1 and command[1].isdigit()):
                        n_print=int(command[1])
                    elif (len(command)>1 and command[1] == "all"):
                        n_print=1000
                    else:
                        n_print=5
                    for char in file:
                        if n_line < n_print :
                            line += char
                            if char == '\n':
                                log = log + '{}\n'.format(line)
                                line = ''
                                n_line += 1
                    greet_bot.send_message(last_chat_id, '{}'.format(log))
                
                if command[0] == "/sync" or command[0] == "/sync@weeelab_bot":
                    data=oc.file_info(OC_PATH).get_last_modified()
                    print oc.file_info(OC_PATH).get_last_modified().ToLocalTime()
                    greet_bot.send_message(last_chat_id, 'Last update of log file:\n{}'.format(data))
                    
                if command[0] == "/stat" or command[0] == "/stat@weeelab_bot":
                    file = oc.get_file_contents(OC_PATH)
                    found_u = False
                    m=0
                    s=0
                    sum = datetime.timedelta(hours=int(0), minutes=int(0))
                    if (len(command) == 1):
                        greet_bot.send_message(last_chat_id, 'Achtung! Insert name.surname for the stat')
                    elif (len(command)>1):
                        name = str(command[1])
                        print name
                        for char in file:
                            if char != '\n':
                                line += char
                            elif (name == str(line[47:line.rfind(">")])):
                                print "enter"
                                if ("INLAB" in line):
                                    line = ''
                                else:
                                    found_u = True
                                    (h, m) = line[39:line.rfind("]")].split(':')
                                    d = datetime.timedelta(hours=int(h), minutes=int(m))
                                    sum += d
                                    line = ''
                            else:
                                line = ''
                        if found_u == False:
                            greet_bot.send_message(last_chat_id, 'No stat for the user. Have you insert it correctly? (name.surname)')
                        else:
                            (hours, minutes, seconds) = str(sum).split(':')
                            greet_bot.send_message(last_chat_id, 'Stat for the user {}\nHH:MM = {}:{}'.format(nameExtr(name), hours, minutes))
                            
                if command[0] == "/top" or command[0] == "/top@weeelab_bot":
                    number_list = 10
                    if len(command) == 1:
                        number_list = 10
                    elif command[1].isdigit():
                        number_list = int(command[1])
                    elif command[1] == "all":
                        number_list = 50
                    print number_list
                    file = oc.get_file_contents(OC_PATH)
                    count = 0
                    user_name = []
                    user_hours = {}
                    top_list = 'Top User List!\n'
                    for char in file:
                        if char != '\n':
                            line += char
                        else:
                            if ("INLAB" in line):
                                line = ''
                            else:
                                name = line[47:line.rfind(">")].encode('utf-8')
                                (h, m) = line[39:line.rfind("]")].split(':')
                                d = datetime.timedelta(hours=int(h), minutes=int(m))
                                if (name in user_name):
                                    user_hours[name]+=d
                                    line = ''
                                else:
                                    user_name.append(name)
                                    user_hours[name] = d
                                    line = ''
                    sorted_hours = sorted(user_hours.items(), key=operator.itemgetter(1), reverse=True)
                    #greet_bot.send_message(last_chat_id, 'Top User List!\n')
                    for element in sorted_hours:
                        count += 1
                        (hours, minutes, seconds) = str(element[1]).split(':')
                        if count <= number_list:
                            top_list = top_list + '{}) {}    HH:MM = {}:{}\n'.format(count, nameExtr(element[0]), hours, minutes)
                            #greet_bot.send_message(last_chat_id, '{}) {}    HH:MM = {}:{}'.format(count, nameExtr(element[0]), hours, minutes))
                    greet_bot.send_message(last_chat_id, '{}'.format(top_list))
            
            user_bot = oc.get_file_contents(USER_BOT_PATH)
            if (str(last_user_id) in user_bot):
                print "ok"
            else:
                user_bot_str = user_bot.decode('utf-8') + '\'' + complete_name.encode('utf-8') + '\'' + ': ' + '\'' + str(last_user_id) + '\'' + ', '
                oc.put_file_contents(USER_BOT_PATH, user_bot_str.encode('utf-8'))
            #os.environ['USER_BOT'] = user_bot.encode('utf-8')

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        exit()
